---
title: "TransportHealth-Shiny"
author: "Core Clinical Sciences"
format:
  dashboard: 
    theme: default
    orientation: rows
server: shiny
---

# User Manual

# DAG

# Data 

## Upload Data and Select Analysis Method {.flow}

```{r}
#| content: 
fileInput('dataFile', 'Upload Data File', 
          accept = c('.csv'),
          width="90%",
          buttonLabel = "Upload")
selectInput("methodType", "Select the method for analysis:",
            choices = c("IOPW", "G-computation", "MAIC", "NMI")
            )
```

# Model

```{r}
uiOutput("performanceInputs")
```

```{r}
#| context: server
performanceInputs <- reactive({
      if (input$methodType == "IPOW") {
         fluidRow(
            # Inputs on top
            # THESE MARGINS NEED TO BE FIXED
            selectInput("dropdownDirection", "Direction of Treatment Effect",
                        choices = c("Positive", "Negative")
            ),
            column(5,
                   # Inputs under "Trial Results" and "User Expectations" side-by-side
                   fluidRow(
                      column(6, # Half width column
                             tags$p("Trial Results"),
                             numericInput("nEvents", "Number of Responses (Intervention)", value = 30, min = 0, max = 1000),
                             numericInput("sampleSize", "Sample Size", value = 100, min = 1, max = 1000)
                      ),
                      column(6, # Half width column
                             tags$p("User Expectations"),
                             numericInput("expectedRateIII", "Expected Response Rate", value = 0.5, min = 0, max = 1, step = 0.01),
                             numericInput("lowerBoundIII", "Probable Lower Bound", value = 0.3, min = 0, max = 1, step = 0.01),
                             numericInput("upperBoundIII", "Probable Upper Bound", value = 0.7, min = 0, max = 1, step = 0.01),
                             sliderInput("CrIUser", "Indicate your certainty level (e.g., 90%, 95%, 99%) that this interval contains the true response rate.",
                                         value = 95, min = 10, max = 99, post = "%"
                             )
                      )
                   )
            ),
            # Split 7 for the plot
            column(7,
                   plotOutput("scenarioIIIPlot")
            )
         )
      } else{
         fluidRow(
            # Inputs on top
            # THESE MARGINS NEED TO BE FIXED
            selectInput("dropdownDirection", "Direction of Treatment Effect",
                        choices = c("Positive", "Negative"),
                        selected = "Positive"
            ),
            selectInput("performanceVar", "Performance Outcome of Interest:", choices = c("Change from Baseline", "Post-Intervention Measure"), selected = "Change from Baseline"),
            column(5,
                   # Inputs under "Trial Results" and "User Expectations" side-by-side
                   fluidRow(
                      column(6, # Half width column
                             tags$p("Trial Results"),
                             numericInput("meanResponse", label = "Mean response from Trial (Intervention)",  value = 30, min = 0, max = 1000),
                             uiOutput("additionalInput"),
                             # if (is.null(input$performanceVar) || input$performanceVar == "Change from Baseline") {
                             #    tagList(
                             #       numericInput("ciLower", "95% CI Lower Bound", value = 50, min = -Inf, max = Inf),
                             #       numericInput("ciUpper", "95% CI Upper Bound", value = 70, min = -Inf, max = Inf)
                             #    )
                             # } else if (input$performanceVar == "Post-Intervention measure") {
                             #    numericInput("sdResponse", "SD", value = 10, min = 0.001, max = 1000)
                             # },
                             numericInput("sampleSizeCts", "Sample Size", value = 10, min = 1, max = 1000)
                      ),
                      column(6, # Half width column
                             tags$p("User Expectations"),
                             numericInput("expectedMean", label = "Mean", value = 20, min = 0, max = 1000),
                             numericInput("expectedLowerBound", "Probable Lower Bound", value = 10, min = 0, max = 1000),
                             numericInput("expectedUpperBound", "Probable Upper Bound", value = 30, min = 0, max = 1000),
                             sliderInput("CrIUserCts", "Indicate your certainty level (e.g., 90%, 95%, 99%) that this interval contains the true response rate.",
                                         value = 95, min = 10, max = 99, post = "%"
                             )
                      )
                   )
            ),
            # Split 7 for the plot
            column(7,
                   # tagList(
                   #    DTOutput("continuousPerformanceTable"),
                   #    plotOutput("continuousPerformancePlot")
                   # )
                   plotOutput("distPlot")
            )
         )
      }
   })

```

# Results

# Technical Details



<!-- Examples for shiny in quarto: -->

<!-- # {.sidebar} -->
<!-- ```{r} -->
<!-- sliderInput("bins", "Number of bins:", -->
<!--             min = 1, max = 50, value = 30) -->
<!-- ``` -->

<!-- # User Manual -->
<!-- This should work maybe I don't know? -->

<!-- # Plot -->

<!-- ```{r} -->
<!-- plotOutput("distPlot") -->
<!-- ``` -->



```{r}
#| context: server
output$distPlot <- renderPlot({
   x <- faithful[, 2]  # Old Faithful Geyser data
   bins <- seq(min(x), max(x), length.out = input$bins + 1)
   hist(x, breaks = bins, col = 'darkgray', border = 'white',
        xlab = 'Waiting time to next eruption (in mins)',
        main = 'Histogram of waiting times')
})
```



